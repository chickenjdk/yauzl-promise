name: Test

on:
  push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - run: npm ci
    - run: npm run lint

  test-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20, 19, 18, 16]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run test-main

  test-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - run: npm ci
    - run: npm run test-main

  test-mac-os:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - run: npm ci
    - run: npm run test-main

  test-big-mac-zips:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        mac-big-size: [65534, 65535, 65536, 65537, 131072, 200000]

    env:
      MAC_BIG_SIZE: ${{ matrix.mac-big-size }}

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - run: npm ci
    - run: npm run test-mac-big

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Extract coverage and generate badge
        run: |
          PCT=$(node -pe "require('./coverage/coverage-summary.json').total.statements.pct.toFixed(0)")
          COLOR=$(node -e "
            let pct = $PCT;
            console.log(pct > 90 ? 'brightgreen' : pct > 75 ? 'yellow' : 'red');
          ")
          echo '{
            "schemaVersion": 1,
            "label": "coverage",
            "message": "'"$PCT"'%",
            "color": "'"$COLOR"'"
          }' > coverage.json
      - name: Download deploy workflow
        run: wget https://raw.githubusercontent.com/chickenjdk/github-actions-workflows/main/.github/workflows/deploy-static.yml -O .github/workflows/deploy-static.yml
      - name: Publish report
        uses: ./.github/workflows/deploy-static.yml
        with:
          source_path: ./coverage.json
          STATIC_CONTENT_TOKEN: ${{ secrets.STATIC_CONTENT_TOKEN }}